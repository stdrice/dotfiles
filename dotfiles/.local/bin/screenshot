#!/usr/bin/env bash

# options
option_1="Capture Desktop"
option_2="Capture Area"
option_3="Capture in 5s"
option_4="Capture in 10s"
close='Close'

# rofi cmd
rofi_cmd() {
	rofi -dmenu -p "Screenshot" 
}

# pass variables to rofi dmenu
run_rofi() {
	echo -e "$option_1\n$option_2\n$option_3\n$option_4\n$close" | rofi_cmd
}

# screenshot
dir="$(xdg-user-dir PICTURES)/Screenshots"
file="$(date +%Y%m%d_%Hh%Mm%Ss_grim.png)"

# directory
if [[ ! -d "$dir" ]]; then
	mkdir -p "$dir"
fi

# notify and view screenshot
notify_view() {
	notify_cmd_shot='dunstify -u low -h string:x-dunst-stack-tag:screenshot'
	${notify_cmd_shot} "ðŸ“‹ Copied to clipboard"
	if [[ -e "$dir/$file" ]]; then
    ${notify_cmd_shot} "ðŸ“· Screenshot taken"
	else
		${notify_cmd_shot} "ðŸ“· Screenshot deleted"
	fi
}

# countdown
countdown () {
  for sec in $(seq "$1" -1 1); do
		dunstify -t 1000 -h string:x-dunst-stack-tag:screenshottimer "Taking shot in: $sec"
		sleep 1
	done
}

# take shots
shotnow () {
	sleep 0.5 && grim "$dir"/"$file" | wl-copy
	notify_view
}

shot5 () {
	countdown '5'
	sleep 0.5 && grim "$dir"/"$file" | wl-copy
	notify_view
}

shot10 () {
	countdown '10'
	sleep 0.5 && grim "$dir"/"$file" | wl-copy
	notify_view
}

shotarea () {
	grim -g "$(slurp)" "$dir"/"$file"| wl-copy
	notify_view
}

# run
case $1 in
  --area) shotarea ;;
  --delay) shot5 ;;
esac

chosen="$(run_rofi)"
case "$chosen" in
    "$option_1") shotnow ;;
    "$option_2") shotarea ;;
    "$option_3") shot5 ;;
    "$option_4") shot10 ;;
esac


